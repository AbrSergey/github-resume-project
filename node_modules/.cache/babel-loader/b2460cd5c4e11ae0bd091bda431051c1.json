{"ast":null,"code":"var _jsxFileName = \"/home/sergey/Documents/own_project/MVP/mvp-crash-course/src/containers/generalInformation/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Card from '../../components/card';\nimport Avatar from '../../components/avatar';\nimport PropTypes from 'prop-types';\nimport GeneralInformationRow from '../../components/generalInformationRow';\nimport Spinner from '../../components/spinner';\nimport { ThemeConsumer } from '../../components/themeContext';\nimport './style.scss';\n\nclass GeneralInformation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    await this.props.generalInformationGetAction();\n  }\n\n  render() {\n    const {\n      informationData,\n      name,\n      position,\n      loading,\n      avatar\n    } = this.props;\n    return /*#__PURE__*/React.createElement(ThemeConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, ({\n      darkTheme\n    }) => {\n      return /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"general-information-card\",\n        theme: darkTheme ? \"dark\" : \"light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 31\n        }\n      }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Avatar, {\n        url: avatar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"general-information\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"general-information-data\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"hello\",\n        theme: darkTheme ? \"dark\" : \"light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 27\n        }\n      }, \"Hello & Welcome\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"whoami\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 27\n        }\n      }, \"I'm \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 54\n        }\n      }, name)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"work-position\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 27\n        }\n      }, position), /*#__PURE__*/React.createElement(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 27\n        }\n      }, Object.keys(informationData).map(name => /*#__PURE__*/React.createElement(GeneralInformationRow, {\n        key: name,\n        rowName: name,\n        rowValue: informationData[name],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 75\n        }\n      }))))))));\n    });\n  }\n\n}\n\n;\n\nconst mapStateToProps = ({\n  generalInformation\n}) => ({\n  informationData: generalInformation.informationData,\n  name: generalInformation.name,\n  position: generalInformation.position,\n  avatar: generalInformation.avatar,\n  loading: generalInformation.loading,\n  error: generalInformation.error\n});\n\nexport default connect(mapStateToProps, ({\n  generalInformation\n}) => ({\n  generalInformationGetAction: generalInformation.get\n}))(GeneralInformation);\nGeneralInformation.propTypes = {\n  generalInformationGetAction: PropTypes.func,\n  informationData: PropTypes.object,\n  name: PropTypes.string,\n  position: PropTypes.string,\n  avatar: PropTypes.string,\n  loading: PropTypes.bool,\n  error: PropTypes.bool\n};","map":{"version":3,"sources":["/home/sergey/Documents/own_project/MVP/mvp-crash-course/src/containers/generalInformation/index.js"],"names":["React","Component","connect","Card","Avatar","PropTypes","GeneralInformationRow","Spinner","ThemeConsumer","GeneralInformation","constructor","props","state","componentDidMount","generalInformationGetAction","render","informationData","name","position","loading","avatar","darkTheme","Object","keys","map","mapStateToProps","generalInformation","error","get","propTypes","func","object","string","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Card from '../../components/card';\nimport Avatar from '../../components/avatar';\nimport PropTypes from 'prop-types';\nimport GeneralInformationRow from '../../components/generalInformationRow';\nimport Spinner from '../../components/spinner';\nimport { ThemeConsumer } from '../../components/themeContext';\n\nimport './style.scss';\n\nclass GeneralInformation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { };\n  }\n\n  async componentDidMount() {\n    await this.props.generalInformationGetAction();\n  }\n\n  render() {\n    const { informationData, name, position, loading, avatar } = this.props;\n\n    return (\n      <ThemeConsumer>\n        {\n          ({ darkTheme }) => {\n            return (\n              <Card>\n                <div className=\"general-information-card\" theme={darkTheme ? \"dark\" : \"light\"}>\n                  { loading ? <Spinner/> :\n                  <>\n                    <Avatar url={avatar}/>\n                      <div className=\"general-information\">\n                        <div className=\"general-information-data\">\n                          <p className=\"hello\" theme={darkTheme ? \"dark\" : \"light\"}>Hello & Welcome</p>\n                          <p className=\"whoami\" >I'm <span>{name}</span></p>\n                          <p className=\"work-position\">{position}</p>\n                          <table>\n                            {\n                              Object.keys(informationData).map((name) => (<GeneralInformationRow key={name} rowName={name} rowValue={informationData[name]} />))\n                            }\n                          </table>\n                        </div>\n                      </div>\n                    </>\n                  }\n                </div>\n              </Card>\n            )\n          }\n        }\n      </ThemeConsumer>\n    )\n  }\n};\n\nconst mapStateToProps = ({ generalInformation }) => ({\n  informationData: generalInformation.informationData,\n  name: generalInformation.name,\n  position: generalInformation.position,\n  avatar: generalInformation.avatar,\n  loading: generalInformation.loading,\n  error: generalInformation.error\n});\n\nexport default connect(mapStateToProps, ({ generalInformation }) => ({\n  generalInformationGetAction: generalInformation.get\n}))(GeneralInformation);\n\nGeneralInformation.propTypes = {\n  generalInformationGetAction: PropTypes.func,\n  informationData: PropTypes.object,\n  name: PropTypes.string,\n  position: PropTypes.string,\n  avatar: PropTypes.string,\n  loading: PropTypes.bool,\n  error: PropTypes.bool\n};"]},"metadata":{},"sourceType":"module"}