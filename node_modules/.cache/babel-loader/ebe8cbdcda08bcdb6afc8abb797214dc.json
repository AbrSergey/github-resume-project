{"ast":null,"code":"var _jsxFileName = \"/home/sergey/Documents/own_project/MVP/mvp-crash-course/src/containers/generalInformation/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Card from '../../components/card';\nimport Avatar from '../../components/avatar';\nimport PropTypes from 'prop-types';\nimport GeneralInformationRow from '../../components/generalInformationRow';\nimport Spinner from '../../components/spinner';\nimport './style.scss';\n\nclass GeneralInformation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    await this.props.generalInformationGetAction();\n  }\n\n  render() {\n    const {\n      informationData,\n      name,\n      position,\n      loading,\n      avatar\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"general-information-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 23\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Avatar, {\n      url: avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"general-information\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"general-information-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"hello\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }\n    }, \"Hello & Welcome\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"whoami\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }\n    }, \"I'm \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 45\n      }\n    }, name)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"work-position\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }\n    }, position), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    }, Object.keys(informationData).map(name => /*#__PURE__*/React.createElement(GeneralInformationRow, {\n      key: name,\n      rowName: name,\n      rowValue: informationData[name],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 67\n      }\n    }))))))));\n  }\n\n}\n\n;\n\nconst mapStateToProps = ({\n  generalInformation\n}) => ({\n  informationData: generalInformation.informationData,\n  name: generalInformation.name,\n  position: generalInformation.position,\n  avatar: generalInformation.avatar,\n  loading: generalInformation.loading,\n  error: generalInformation.error\n});\n\nexport default connect(mapStateToProps, ({\n  generalInformation\n}) => ({\n  generalInformationGetAction: generalInformation.get\n}))(GeneralInformation);\nGeneralInformation.propTypes = {\n  generalInformationGetAction: PropTypes.func,\n  informationData: PropTypes.object,\n  name: PropTypes.string,\n  position: PropTypes.string,\n  avatar: PropTypes.string,\n  loading: PropTypes.bool,\n  error: PropTypes.bool\n};","map":{"version":3,"sources":["/home/sergey/Documents/own_project/MVP/mvp-crash-course/src/containers/generalInformation/index.js"],"names":["React","Component","connect","Card","Avatar","PropTypes","GeneralInformationRow","Spinner","GeneralInformation","constructor","props","state","componentDidMount","generalInformationGetAction","render","informationData","name","position","loading","avatar","Object","keys","map","mapStateToProps","generalInformation","error","get","propTypes","func","object","string","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Card from '../../components/card';\nimport Avatar from '../../components/avatar';\nimport PropTypes from 'prop-types';\nimport GeneralInformationRow from '../../components/generalInformationRow';\nimport Spinner from '../../components/spinner';\n\nimport './style.scss';\n\nclass GeneralInformation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { };\n  }\n\n  async componentDidMount() {\n    await this.props.generalInformationGetAction();\n  }\n\n  render() {\n    const { informationData, name, position, loading, avatar } = this.props;\n\n    return (\n      <Card>\n        <div className=\"general-information-card\">\n          { loading ? <Spinner/> :\n          <>\n            <Avatar url={avatar}/>\n              <div className=\"general-information\">\n                <div className=\"general-information-data\">\n                  <p className=\"hello\">Hello & Welcome</p>\n                  <p className=\"whoami\">I'm <span>{name}</span></p>\n                  <p className=\"work-position\">{position}</p>\n                  <table>\n                    {\n                      Object.keys(informationData).map((name) => (<GeneralInformationRow key={name} rowName={name} rowValue={informationData[name]} />))\n                    }\n                  </table>\n                </div>\n              </div>\n            </>\n          }\n        </div>\n      </Card>\n    )\n  }\n};\n\nconst mapStateToProps = ({ generalInformation }) => ({\n  informationData: generalInformation.informationData,\n  name: generalInformation.name,\n  position: generalInformation.position,\n  avatar: generalInformation.avatar,\n  loading: generalInformation.loading,\n  error: generalInformation.error\n});\n\nexport default connect(mapStateToProps, ({ generalInformation }) => ({\n  generalInformationGetAction: generalInformation.get\n}))(GeneralInformation);\n\nGeneralInformation.propTypes = {\n  generalInformationGetAction: PropTypes.func,\n  informationData: PropTypes.object,\n  name: PropTypes.string,\n  position: PropTypes.string,\n  avatar: PropTypes.string,\n  loading: PropTypes.bool,\n  error: PropTypes.bool\n};"]},"metadata":{},"sourceType":"module"}