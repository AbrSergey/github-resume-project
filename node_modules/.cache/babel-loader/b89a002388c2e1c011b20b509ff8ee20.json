{"ast":null,"code":"import axios from 'axios';\nimport config from '../config';\nconst backend = axios.create({\n  baseURL: `${config.backend.host}/api/resume`\n});\nconst gitHubBackendAuth = axios.create({\n  baseURL: 'https://github.com'\n});\nconst gitHubBackend = axios.create({\n  baseURL: config.github.base_url\n});\nexport const socialLinksGet = () => backend.get('/social_links');\nexport const generalInformationGet = () => backend.get('/general_information');\nexport const skillsGet = () => backend.get('/skills');\nexport const educationGet = () => backend.get('/education');\nexport const authorize = username => gitHubBackendAuth.get(`/login/oauth/authorize?login=${username}&client_id=${config.client_id}`);\nexport const getAccessToken = async code => {\n  const {\n    client_id,\n    client_secret\n  } = config.github;\n  const {\n    data\n  } = await backend.post('/token', {\n    code,\n    client_id,\n    client_secret\n  });\n\n  if (data.indexOf('access_token=') !== -1) {\n    const access_token = data.substring('access_token='.length, data.indexOf('&scope='));\n    localStorage.setItem('access_token', access_token);\n    localStorage.setItem('isTokenPresented', true);\n    gitHubBackend.interceptors.request.use(config => {\n      const accessToken = localStorage.getItem('access_token');\n      config.headers.Authorization = `Bearer ${accessToken}`;\n      return config;\n    });\n    return null;\n  } else return data;\n};\nexport const userInfo = () => gitHubBackend.get('/user');","map":{"version":3,"sources":["/home/sergey/Documents/own_project/MVP/mvp-crash-course/src/services/backend.js"],"names":["axios","config","backend","create","baseURL","host","gitHubBackendAuth","gitHubBackend","github","base_url","socialLinksGet","get","generalInformationGet","skillsGet","educationGet","authorize","username","client_id","getAccessToken","code","client_secret","data","post","indexOf","access_token","substring","length","localStorage","setItem","interceptors","request","use","accessToken","getItem","headers","Authorization","userInfo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAG,GAAEH,MAAM,CAACC,OAAP,CAAeG,IAAK;AAAlC,CAAb,CAAhB;AACA,MAAMC,iBAAiB,GAAGN,KAAK,CAACG,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAb,CAA1B;AACA,MAAMG,aAAa,GAAGP,KAAK,CAACG,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAEH,MAAM,CAACO,MAAP,CAAcC;AAAzB,CAAb,CAAtB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAMR,OAAO,CAACS,GAAR,CAAY,eAAZ,CAA7B;AACP,OAAO,MAAMC,qBAAqB,GAAG,MAAMV,OAAO,CAACS,GAAR,CAAY,sBAAZ,CAApC;AACP,OAAO,MAAME,SAAS,GAAG,MAAMX,OAAO,CAACS,GAAR,CAAY,SAAZ,CAAxB;AACP,OAAO,MAAMG,YAAY,GAAG,MAAMZ,OAAO,CAACS,GAAR,CAAY,YAAZ,CAA3B;AAEP,OAAO,MAAMI,SAAS,GAAIC,QAAD,IAAcV,iBAAiB,CAACK,GAAlB,CAAuB,gCAA+BK,QAAS,cAAaf,MAAM,CAACgB,SAAU,EAA7F,CAAhC;AACP,OAAO,MAAMC,cAAc,GAAG,MAAOC,IAAP,IAAgB;AAC5C,QAAM;AAAEF,IAAAA,SAAF;AAAaG,IAAAA;AAAb,MAA+BnB,MAAM,CAACO,MAA5C;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAW,MAAMnB,OAAO,CAACoB,IAAR,CAAa,QAAb,EAAuB;AAC5CH,IAAAA,IAD4C;AACtCF,IAAAA,SADsC;AAC3BG,IAAAA;AAD2B,GAAvB,CAAvB;;AAIA,MAAIC,IAAI,CAACE,OAAL,CAAa,eAAb,MAAkC,CAAC,CAAvC,EAA0C;AACxC,UAAMC,YAAY,GAAGH,IAAI,CAACI,SAAL,CAAe,gBAAgBC,MAA/B,EAAuCL,IAAI,CAACE,OAAL,CAAa,SAAb,CAAvC,CAArB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCJ,YAArC;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,kBAArB,EAAyC,IAAzC;AAEArB,IAAAA,aAAa,CAACsB,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CAAwC9B,MAAD,IAAY;AACjD,YAAM+B,WAAW,GAAGL,YAAY,CAACM,OAAb,CAAqB,cAArB,CAApB;AACAhC,MAAAA,MAAM,CAACiC,OAAP,CAAeC,aAAf,GAAgC,UAASH,WAAY,EAArD;AACA,aAAO/B,MAAP;AACD,KAJD;AAMA,WAAO,IAAP;AACD,GAZD,MAaK,OAAOoB,IAAP;AACN,CApBM;AAsBP,OAAO,MAAMe,QAAQ,GAAG,MAAM7B,aAAa,CAACI,GAAd,CAAkB,OAAlB,CAAvB","sourcesContent":["import axios from 'axios';\nimport config from '../config';\n\nconst backend = axios.create({ baseURL: `${config.backend.host}/api/resume` });\nconst gitHubBackendAuth = axios.create({ baseURL: 'https://github.com' });\nconst gitHubBackend = axios.create({ baseURL: config.github.base_url });\n\nexport const socialLinksGet = () => backend.get('/social_links');\nexport const generalInformationGet = () => backend.get('/general_information');\nexport const skillsGet = () => backend.get('/skills');\nexport const educationGet = () => backend.get('/education');\n\nexport const authorize = (username) => gitHubBackendAuth.get(`/login/oauth/authorize?login=${username}&client_id=${config.client_id}`);\nexport const getAccessToken = async (code) => {\n  const { client_id, client_secret } = config.github;\n  const { data } = await backend.post('/token', {\n    code, client_id, client_secret\n  });\n\n  if (data.indexOf('access_token=') !== -1) {\n    const access_token = data.substring('access_token='.length, data.indexOf('&scope='));\n    localStorage.setItem('access_token', access_token);\n    localStorage.setItem('isTokenPresented', true);\n\n    gitHubBackend.interceptors.request.use((config) => {\n      const accessToken = localStorage.getItem('access_token');\n      config.headers.Authorization = `Bearer ${accessToken}`;\n      return config;\n    });\n\n    return null;\n  }\n  else return data;\n}\n\nexport const userInfo = () => gitHubBackend.get('/user');"]},"metadata":{},"sourceType":"module"}