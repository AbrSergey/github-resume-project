{"ast":null,"code":"import { useEffect, useState } from 'react';\nexport const useDarkMode = () => {\n  const [darkTheme, changeTheme] = useState(false);\n  const [componentMounted, setComponentMounted] = useState(false);\n\n  const toggleTheme = () => {\n    if (!darkTheme) {\n      window.localStorage.setItem('theme', 'dark');\n      changeTheme(true);\n    } else {\n      window.localStorage.setItem('theme', 'light');\n      setTheme(false);\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme') === 'dark';\n\n    if (localTheme) {\n      setTheme(localTheme);\n    } else {\n      setTheme('light');\n      window.localStorage.setItem('theme', 'light');\n    }\n\n    setComponentMounted(true);\n  }, []);\n  return [theme, toggleTheme, componentMounted];\n};","map":{"version":3,"sources":["/home/sergey/Documents/own_project/MVP/mvp-crash-course/src/components/useDarkMode/index.js"],"names":["useEffect","useState","useDarkMode","darkTheme","changeTheme","componentMounted","setComponentMounted","toggleTheme","window","localStorage","setItem","setTheme","localTheme","getItem","theme"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,QAAM,CAAEC,SAAF,EAAaC,WAAb,IAA6BH,QAAQ,CAAC,KAAD,CAA3C;AACA,QAAM,CAAEI,gBAAF,EAAoBC,mBAApB,IAA4CL,QAAQ,CAAC,KAAD,CAA1D;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACxB,QAAI,CAACJ,SAAL,EAAgB;AACdK,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqC,MAArC;AACAN,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAHD,MAGO;AACLI,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqC,OAArC;AACAC,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF,GARD;;AAUAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,UAAU,GAAGJ,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4B,OAA5B,MAAyC,MAA5D;;AACA,QAAID,UAAJ,EAAgB;AACdD,MAAAA,QAAQ,CAACC,UAAD,CAAR;AACD,KAFD,MAEO;AACLD,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACAH,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqC,OAArC;AACD;;AACDJ,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GATQ,EASN,EATM,CAAT;AAWA,SAAO,CAACQ,KAAD,EAAQP,WAAR,EAAqBF,gBAArB,CAAP;AACD,CA1BM","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const useDarkMode = () => {\n  const [ darkTheme, changeTheme ] = useState(false);\n  const [ componentMounted, setComponentMounted ] = useState(false);\n\n  const toggleTheme = () => {\n    if (!darkTheme) {\n      window.localStorage.setItem('theme', 'dark');\n      changeTheme(true);\n    } else {\n      window.localStorage.setItem('theme', 'light');\n      setTheme(false);\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme') === 'dark';\n    if (localTheme) {\n      setTheme(localTheme);\n    } else {\n      setTheme('light')\n      window.localStorage.setItem('theme', 'light')\n    }\n    setComponentMounted(true);\n  }, []);\n  \n  return [theme, toggleTheme, componentMounted]\n};"]},"metadata":{},"sourceType":"module"}