{"ast":null,"code":"var _jsxFileName = \"/home/sergey/Documents/own_project/MVP/mvp-crash-course/src/containers/getToken/index.js\";\nimport React, { Component } from 'react';\nimport { getAccessToken } from '../../services/backend';\nimport { Redirect } from 'react-router-dom';\nimport Spinner from '../../components/spinner';\nimport Error from '../../components/error';\nimport './style.css';\n\nclass GetToken extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      error: null\n    };\n  }\n\n  async componentDidMount() {\n    const queryParams = new URLSearchParams(this.props.location.search);\n    const code = queryParams.get('code');\n    const error = await getAccessToken(code);\n\n    if (error) {\n      this.setState({\n        loading: false,\n        error\n      });\n    } else {\n      this.setState({\n        loading: false\n      });\n      this.props.history.push('http://localhost:3000/resume');\n    }\n  }\n\n  render() {\n    const {\n      loading,\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, loading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"token-spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    })) : error ? /*#__PURE__*/React.createElement(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }) : null // error ? <Error error={error}/> : <Redirect to='/resume'/> \n    );\n  }\n\n}\n\n;\nexport default GetToken;","map":{"version":3,"sources":["/home/sergey/Documents/own_project/MVP/mvp-crash-course/src/containers/getToken/index.js"],"names":["React","Component","getAccessToken","Redirect","Spinner","Error","GetToken","constructor","props","state","loading","error","componentDidMount","queryParams","URLSearchParams","location","search","code","get","setState","history","push","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,OAAO,aAAP;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC/BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID;;AACD,QAAMC,iBAAN,GAA0B;AACxB,UAAMC,WAAW,GAAG,IAAIC,eAAJ,CAAoB,KAAKN,KAAL,CAAWO,QAAX,CAAoBC,MAAxC,CAApB;AACA,UAAMC,IAAI,GAAGJ,WAAW,CAACK,GAAZ,CAAgB,MAAhB,CAAb;AAEA,UAAMP,KAAK,GAAG,MAAMT,cAAc,CAACe,IAAD,CAAlC;;AAEA,QAAIN,KAAJ,EAAW;AACT,WAAKQ,QAAL,CAAc;AACZT,QAAAA,OAAO,EAAE,KADG;AAEZC,QAAAA;AAFY,OAAd;AAID,KALD,MAMK;AACH,WAAKQ,QAAL,CAAc;AACZT,QAAAA,OAAO,EAAE;AADG,OAAd;AAIA,WAAKF,KAAL,CAAWY,OAAX,CAAmBC,IAAnB,CAAwB,8BAAxB;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAqB,KAAKF,KAAhC;AAEA,wBACE,0CACIC,OAAO,gBACP;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADO,GAKLC,KAAK,gBAAG,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAA4B,IANvC,CAOM;AAPN,KADF;AAYD;;AA5C8B;;AA6ChC;AAED,eAAeL,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { getAccessToken } from '../../services/backend';\nimport { Redirect } from 'react-router-dom';\nimport Spinner from '../../components/spinner';\nimport Error from '../../components/error';\n\nimport './style.css';\n\nclass GetToken extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      error: null\n    }\n  }\n  async componentDidMount() {\n    const queryParams = new URLSearchParams(this.props.location.search); \n    const code = queryParams.get('code')\n\n    const error = await getAccessToken(code);\n\n    if (error) {\n      this.setState({\n        loading: false,\n        error\n      });\n    }\n    else {\n      this.setState({\n        loading: false\n      });\n\n      this.props.history.push('http://localhost:3000/resume');\n    }\n  }\n\n  render() {\n    const { loading, error } = this.state;\n\n    return (\n      <>\n        { loading ?\n          <div className=\"token-spinner\">\n            <Spinner/>\n          </div>\n          :\n            error ? <Error error={error}/> : null\n            // error ? <Error error={error}/> : <Redirect to='/resume'/> \n        }\n      </>\n    )\n  }\n};\n\nexport default GetToken;"]},"metadata":{},"sourceType":"module"}