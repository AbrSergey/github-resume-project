import { Reducer as ReduxReducer } from 'redux';
import { InitConfig, Models, RematchStore, ModelReducers, ModelEffects, ModelEffectsCreator, RematchDispatch } from './types';
declare module 'react-redux' {
    interface Connect {
        <RM extends Models<RM> = Models, State = DefaultRootState, TStateProps = {}, TDispatchProps = {}, TOwnProps = {}>(mapStateToProps: MapStateToPropsParam<TStateProps, TOwnProps, State>, mapDispatchToProps: MapRematchDispatchToPropsNonObject<TDispatchProps, TOwnProps, RM>): InferableComponentEnhancerWithProps<TStateProps & TDispatchProps, TOwnProps>;
    }
    type MapRematchDispatchToPropsNonObject<TDispatchProps, TOwnProps, RM extends Models<RM> = Models> = MapRematchDispatchToPropsFactory<TDispatchProps, TOwnProps, RM> | MapRematchDispatchToPropsFunction<TDispatchProps, TOwnProps, RM>;
    type MapRematchDispatchToPropsFactory<TDispatchProps, TOwnProps, RM extends Models<RM> = Models> = (dispatch: RematchDispatch<RM>, ownProps: TOwnProps) => MapRematchDispatchToPropsFunction<TDispatchProps, TOwnProps, RM>;
    type MapRematchDispatchToPropsFunction<TDispatchProps, TOwnProps, RM extends Models<RM> = Models> = (dispatch: RematchDispatch<RM>, ownProps: TOwnProps) => TDispatchProps;
}
export declare const init: <TModels extends Models<TModels>, TExtraModels extends Models<any>>(initConfig?: InitConfig<TModels> | undefined) => RematchStore<TModels & TExtraModels>;
export declare const createModel: <RM extends Models<RM>>() => <R extends ModelReducers<S>, BR extends ReduxReducer<BS>, E extends ModelEffects | ModelEffectsCreator<RM>, S, BS = S>(mo: {
    name?: string;
    state: S;
    reducers?: R;
    baseReducer?: BR;
    effects?: E;
}) => {
    name?: string;
    state: S;
    reducers: R;
    baseReducer: BR;
    effects: E;
};
declare const _default: {
    init: <TModels extends Models<TModels>, TExtraModels extends Models<any>>(initConfig?: InitConfig<TModels> | undefined) => RematchStore<TModels & TExtraModels>;
    createModel: <RM extends Models<RM>>() => <R extends ModelReducers<S>, BR extends ReduxReducer<BS, import("redux").AnyAction>, E extends ModelEffects | ModelEffectsCreator<RM>, S, BS = S>(mo: {
        name?: string | undefined;
        state: S;
        reducers?: R | undefined;
        baseReducer?: BR | undefined;
        effects?: E | undefined;
    }) => {
        name?: string | undefined;
        state: S;
        reducers: R;
        baseReducer: BR;
        effects: E;
    };
};
export default _default;
export * from './types';
//# sourceMappingURL=index.d.ts.map